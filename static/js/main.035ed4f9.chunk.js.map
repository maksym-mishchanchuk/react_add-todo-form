{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/helpers/findUser.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","deleteTodo","toggleTodoCompletion","completed","title","cn","onClick","type","TodoList","todos","map","findUser","userId","usersFromServer","find","preparedTodos","App","useState","visibleTodos","setVisibleTodos","todoTitle","setTodoTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","onSubmit","event","preventDefault","idForNewTodo","Math","max","prevState","action","method","value","onChange","target","placeholder","disabled","idTodo","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.035ed4f9.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  deleteTodo: (todoId: number) => void,\n  toggleTodoCompletion: (todoId: number) => void\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n  deleteTodo,\n  toggleTodoCompletion,\n}) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n\n      <button\n        className=\"button\"\n        onClick={() => deleteTodo(id)}\n        type=\"button\"\n      >\n        X\n      </button>\n\n      <span className=\"status__todo\">\n        <input\n          onClick={() => toggleTodoCompletion(id)}\n          type=\"checkbox\"\n          className=\"checkbox\"\n\n        />\n        <p>Change status todo</p>\n      </span>\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[]\n  deleteTodo: (idTodo: number) => void\n  toggleTodoCompletion: (idTodo: number) => void\n}\nexport const TodoList: React.FC<Props> = ({\n  deleteTodo,\n  todos,\n  toggleTodoCompletion,\n}) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          deleteTodo={deleteTodo}\n          toggleTodoCompletion={toggleTodoCompletion}\n        />\n      ))}\n    </section>\n  );\n};\n","import usersFromServer from '../../api/users';\nimport { User } from '../../types/User';\n\nexport function findUser(userId: number): User | null {\n  return usersFromServer.find(({ id }) => id === userId) || null;\n}\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { findUser } from './components/helpers/findUser';\n\nconst preparedTodos:Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(preparedTodos);\n\n  const [todoTitle, setTodoTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n\n    setHasTitleError(false);\n  };\n\n  const handleUSerId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const resetFields = () => {\n    setTodoTitle('');\n    setUserId(0);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!todoTitle);\n\n    if (userId === 0) {\n      setHasUserIdError(true);\n    }\n\n    if (!todoTitle || !userId) {\n      return;\n    }\n\n    const idForNewTodo = Math.max(...visibleTodos.map(todo => todo.id)) + 1;\n\n    setVisibleTodos((prevState) => [\n      ...prevState,\n      {\n        id: idForNewTodo,\n        title: todoTitle,\n        completed: false,\n        userId,\n        user: findUser(userId),\n      },\n    ]);\n\n    resetFields();\n  };\n\n  const deleteTodo = (idTodo: number) => {\n    setVisibleTodos((prevState) => prevState\n      .filter(({ id }) => id !== idTodo));\n  };\n\n  const toggleTodoCompletion = (idTodo: number) => {\n    setVisibleTodos((prevState) => {\n      return prevState.map(todo => {\n        if (todo.id === idTodo) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      });\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        className=\"form__todo\"\n        onSubmit={handleSubmit}\n        action=\"/api/todos\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <input\n            className=\"todo__title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={todoTitle}\n            onChange={handleChangeTitle}\n            placeholder=\"write todo\"\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUSerId}\n            className=\"select\"\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          className=\"add__button\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        deleteTodo={deleteTodo}\n        todos={visibleTodos}\n        toggleTodoCompletion={toggleTodoCompletion}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}