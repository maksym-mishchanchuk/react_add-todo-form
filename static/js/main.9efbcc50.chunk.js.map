{"version":3,"sources":["api/users.ts","components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","TodoInfo","title","className","UserInfo","user","href","TodoList","todos","map","todo","cn","preparedTodos","completed","userId","usersFromServer","find","App","useState","visibleTodos","setVisibleTodos","todoTitle","setTodoTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","onSubmit","event","preventDefault","prevState","length","action","method","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9efbcc50.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\ntype Props = {\n  title: string | null,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ title }) => {\n  return (\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={user?.email}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todos: Todo[]\n}\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <article\n          key={todo.id}\n          data-id=\"1\"\n          className={cn('TodoInfo', { 'TodoInfo--completed': false })}\n        >\n          <TodoInfo title={todo.title} />\n          <UserInfo user={todo.user} />\n        </article>\n      ))}\n      {/* <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\"> */}\n      {/*   <h2 className=\"TodoInfo__title\"> */}\n      {/*     delectus aut autem */}\n      {/*   </h2> */}\n\n      {/*   <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\"> */}\n      {/*     Leanne Graham */}\n      {/*   </a> */}\n      {/* </article> */}\n\n      {/* <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\"> */}\n      {/*   <h2 className=\"TodoInfo__title\">delectus aut autem</h2> */}\n\n      {/*   <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\"> */}\n      {/*     Leanne Graham */}\n      {/*   </a> */}\n      {/* </article> */}\n\n      {/* <article data-id=\"2\" className=\"TodoInfo\"> */}\n      {/*   <h2 className=\"TodoInfo__title\"> */}\n      {/*     quis ut nam facilis et officia qui */}\n      {/*   </h2> */}\n\n      {/*   <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\"> */}\n      {/*     Patricia Lebsack */}\n      {/*   </a> */}\n      {/* </article> */}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nconst preparedTodos:Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: usersFromServer\n    .find(({ id }) => id === todo.userId) || null,\n}));\n\nexport const App = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(preparedTodos);\n\n  const [todoTitle, setTodoTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n\n    setHasTitleError(false);\n  };\n\n  const handleUSerId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!todoTitle);\n    setHasUserIdError(!hasUserIdError);\n\n    if (!todoTitle || !userId) {\n      return;\n    }\n\n    setVisibleTodos((prevState) => [\n      ...prevState,\n      {\n        id: prevState.length + 1,\n        title: todoTitle,\n        completed: false,\n        userId,\n        user: usersFromServer.find(({ id }) => id === userId) || null,\n      },\n    ]);\n\n    setTodoTitle('');\n    setUserId(0);\n    setHasUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/todos\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={todoTitle}\n            onChange={handleChangeTitle}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUSerId}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}